{
  "version": 3,
  "file": "le5le-store.umd.min.js",
  "sources": [
    "~/le5le-store/src/cookie/cookie.service.ts",
    "~/le5le-store/src/store/store.service.ts",
    "~/le5le-store/src/lib.module.ts",
    "~/le5le-store/le5le-store.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CookieService {\n\n  static get(name: string): string {\n    let arr: RegExpMatchArray;\n    let reg = new RegExp(\"(^| )\" + name + \"=([^;]*)(;|$)\");\n    if (arr = document.cookie.match(reg)) return decodeURIComponent(arr[2]);\n    else return '';\n  }\n\n  // options: {\n  //   expires?:number,\n  //   path?:string,\n  //   domain?:string\n  // }\n  static set(name: string, value: string, options?: any) {\n    let myWindow: any = window;\n    let cookieStr = myWindow.escape(name) + '=' + myWindow.escape(value) + ';';\n\n    if (!options) options = {};\n    if (options.expires) {\n      let dtExpires = new Date(new Date().getTime() + options.expires * 1000 * 60 * 60 * 24);\n      cookieStr += 'expires=' + dtExpires.toUTCString() + ';';\n    }\n    if (options.path) {\n      cookieStr += 'path=' + options.path + ';';\n    }\n    if (options.domain) {\n      cookieStr += 'domain=' + options.domain + ';';\n    }\n\n    document.cookie = cookieStr;\n  }\n\n  // options: {\n  //   path?:string,\n  //   domain?:string\n  // }\n  static delete(name: string, options?: any) {\n    if (CookieService.get(name)) {\n      if (!options) options = {};\n      options.expires = -1;\n      CookieService.set(name, '', options);\n    }\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class StoreService {\n  private memStore: any = {};\n  private memStore$: any = {};\n\n  private find(key: string): any {\n    if (key === '') return null;\n\n    let data: any;\n    let keys = [];\n    if (key === '.') data = this.memStore;\n    else {\n      keys = key.split('.');\n      data = this.memStore[keys[0]];\n    }\n    if (!data) return null;\n\n    // 遍历查找子属性data\n    if (keys.length > 1) {\n      keys.splice(0, 1);\n      for (let k of keys) {\n        data = data[k];\n        if (!data) return null;\n      }\n    }\n\n    return data;\n  }\n\n  private find$(key: string, autoAdd?: boolean): Subject<any> {\n    if (key === '') return null;\n\n    let data: Subject<any> = this.memStore$[key];\n    if (!data) {\n      if (!autoAdd) return null;\n      this.memStore$[key] = new Subject<any>();\n      data = this.memStore$[key];\n    }\n\n    return data;\n  }\n\n  // key: 如果含.表示解析成对象进行条件搜索。注意：但第一个属性存在时，但是where的条件（非type）不匹配时，返回失败。\n  //      如果key = '.'; 表示根存储对象\n  // where: {\n  //   'user.name': 'Alsmile', // 如果含.表示解析成对象进行条件搜索\n  // }\n  public get(key: string, where?: any): any {\n    let data: any = this.find(key);\n\n    // where条件过滤\n    if (where) {\n      for (let whereKey in where) {\n        if (this.find(whereKey) != where[whereKey]) return null;\n      }\n    }\n\n    return data;\n  }\n\n  // 得到一个可观察对象\n  // key: 如果含.表示解析成对象进行条件搜索。\n  public get$(key: string): any {\n    return this.find$(key, true);\n  }\n\n  // key: 如果含.表示解析成对象进行条件搜索。注意：但第一个属性存在时，但是where的条件不匹配时，返回失败。\n  // value: 设置key=value; 如果 value为空，表示删除\n  // where: {\n  //   'user.name': 'Alsmile', // 如果含.表示解析成对象进行条件搜索\n  // }\n  public set(strKey: string, value: any, where?: any): boolean {\n    if (strKey === '' || strKey === '.') return false;\n\n    let keys = strKey.split('.');\n    let rootKey = keys[0];\n    let observableKeys = [rootKey];\n\n    let data: any = this.memStore[rootKey];\n    if (!data) {\n      this.memStore[rootKey] = {};\n      data = this.memStore[rootKey];\n    }\n\n    // 遍历查找子属性data\n    let parentData: any = this.memStore;\n    let readKey = rootKey;\n    let subData: any = data;\n    if (keys.length > 1) {\n      keys.splice(0, 1);\n      for (let k of keys) {\n        if (!subData[k]) subData[k] = {};\n\n        // 添加到observable通知数组，通知订阅数据改变\n        observableKeys.push(observableKeys[observableKeys.length - 1] + '.' + k);\n\n        parentData = subData;\n        readKey = k;\n        subData = subData[k];\n      }\n    }\n\n    // where条件遍历\n    if (where) {\n      for (let whereKeys in where) {\n        let whereData = this.memStore;\n        // 查找where中的子属性\n        let whereKey = whereKeys.split('.');\n        for (let k of whereKey) {\n          whereData = whereData[k];\n          if (!whereData) return false;\n        }\n        if (whereData != where[whereKeys]) return false;\n      }\n    }\n\n    if (value) parentData[readKey] = value;\n    else delete parentData[readKey];\n\n    for (let k of observableKeys) {\n      let observable: Subject<any> = this.find$(k);\n      if (observable) {\n        observable.next(value);\n      }\n    }\n\n    return true;\n  }\n\n  // 通过一个观察对象去设置数据\n  // key: 如果含.表示解析成对象进行条件搜索。\n  public setByObservable(key: string, observable: any) {\n    (<Observable<any>>observable).subscribe(\n      ret => {\n        this.set(key, ret);\n      }\n    );\n  }\n}\n",
    "import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StoreService } from './store/store.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [StoreService]\n})\nexport class Le5leStoreModule {\n  constructor( @Optional() @SkipSelf() parentModule: Le5leStoreModule) {\n    if (parentModule) {\n      throw new Error(\n        'Le5leStoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: Le5leStoreModule,\n      providers: []\n    };\n  }\n}\n",
    "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"
  ],
  "names": [
    "r",
    "c",
    "d",
    "target",
    "key",
    "Object",
    "defineProperty",
    "CookieService",
    "CookieService_1",
    "arr",
    "reg",
    "RegExp",
    "name",
    "set",
    "value",
    "options",
    "myWindow",
    "window",
    "cookieStr",
    "escape",
    "expires",
    "Date",
    "getTime",
    "toUTCString",
    "path",
    "delete",
    "get",
    "arguments",
    "length",
    "desc",
    "getOwnPropertyDescriptor",
    "Reflect",
    "decorate",
    "decorators",
    "i",
    "StoreService",
    "this",
    "memStore",
    "memStore$",
    "prototype",
    "find",
    "data",
    "keys",
    "split",
    "splice",
    "_i",
    "keys_1",
    "find$",
    "autoAdd",
    "Subject$1",
    "where",
    "whereKey",
    "get$",
    "strKey",
    "rootKey",
    "observableKeys",
    "parentData",
    "readKey",
    "subData",
    "k",
    "keys_2",
    "push",
    "whereKeys",
    "whereData",
    "whereKey_1",
    "_a",
    "_b",
    "observableKeys_1",
    "observable",
    "next",
    "Injectable",
    "__decorate$2",
    "__decorate",
    "__metadata",
    "v",
    "metadata",
    "__param",
    "paramIndex",
    "decorator",
    "Le5leStoreModule",
    "Le5leStoreModule_1",
    "parentModule",
    "forRoot"
  ],
  "mappings": "4mBAAAA,GAAAC,EAAA,EAAAC,EAAAF,GAAAC,EAAA,EAGAC,EAHAC,EAAAC,EAAAJ,GAAAE,EAAAC,EAAAC,KAAAJ,GAKE,OAAOC,EAAI,GAAbD,GAAAK,OAAAC,eAAAH,EAAAC,EAAAJ,GAAAA,GAEAO,EAAAA,cAAAC,EAAmC,WACnC,SAAAD,8BACA,IAASE,EACTC,EAAA,IAAAC,OAAA,QAAAC,EAAA,iFAYAL,EAAAM,IAAA,SAAAD,EAAAE,EAAAC,GACA,IAAMC,EAANC,OACMC,EAANF,EAAAG,OAAAP,GAA0C,IAA1CI,EAAAG,OAAAL,GAAA,IAGA,GAFAC,IACQA,MACFA,EAANK,QAAA,CAEQF,GAAR,WADA,IAAAG,MAAA,IAAAA,MAAAC,UAAA,IAAAP,EAAAK,QAAA,GAAA,GAAA,IACAG,cAAA,IAEAR,EAAAS,OAEAN,GAAA,QAA+BH,EAA/BS,KAAA,8DAWAjB,EAAAkB,UAAmB,SAAnBb,EAAAG,GACAP,EAAAkB,IAAAd,KACAG,IACAA,MA5CAA,EAAAK,SAAA,EADAZ,EAAAK,IAAAD,EAAA,GAAAG,OAKA,0GCFa,IALbb,EAAAD,EAAA0B,UAAAC,OAAA5B,EAAAC,EAKA,EALAE,EAAA,OAAA0B,EAAAA,EAAAxB,OAAAyB,yBAAA3B,EAAAC,GAAAyB,EAIA,GAAA,iBAAAE,SAAA,mBAAAA,QAAAC,SAEUhC,EAAV+B,QAAAC,SAAAC,EAAA9B,EAAAC,EAAAyB,QAwIA,IAAA,IAAAK,EAAAD,EAAAL,OAAA,EAAAM,GAAA,EAAAA,KArIAhC,EAAA+B,EAAAC,MACAlC,GAAAC,EAAA,EAAAC,EAAAF,GAAAC,EAAA,EAAAC,EAAAC,EAAAC,EAAAJ,GAAAE,EAAAC,EAAAC,KAAAJ,GAAA,OAAAC,EAAA,GAAAD,GAAAK,OAAAC,eAAAH,EAAAC,EAAAJ,GAAAA,GAGAmC,EAAAA,aAAA,WACA,SAAAA,IAAAC,KAAAC,YACAD,KAASE,oBAETH,EAAAI,UAAAC,KAAA,SAAApC,GACA,GAAA,KAAAA,EACQ,OAAR,KAAA,IAAeqC,OAQf,GALA,MAAQrC,EACFqC,EAANL,KAAkBC,UAElBK,EAAAtC,EAAeuC,MAAM,KACrBF,EAAAL,KAAAC,SAAAK,EAAA,MACOD,EACP,OAAA,KAGA,GAAAC,EAAAd,OAAA,EAAA,CAEAc,EAAAE,OAAA,EAAA,GACQ,IAAR,IAAAC,EAAA,EAAAC,EAAAJ,EAAAG,EAAAC,EAAAlB,OAAAiB,IAAA,CAGA,KADYJ,EAAqBA,EAFDK,EAAhCD,KAIA,OAAA,MAEA,OAAAJ,GAGAN,EAAAI,UAAAQ,MAAA,SAAA3C,EAAA4C,GACA,GAAA,KAAA5C,+DAOAgC,KAAAE,UAAAlC,GAAA,IAAA6C,EAAAA,QACQR,EAAYL,KAAKE,UAAUlC,GAG/B,OAAJqC,GAOAN,EAAAI,UAAAb,IAAA,SAAAtB,EAAA8C,sBAIa,GAAYA,EACzB,IAAA,IAAAC,KAAAD,EACA,GAAAd,KAAAI,KAAAW,IAAAD,EAAAC,yBAQAhB,EAAAI,UAAAa,KAAA,SAAAhD,GAEI,OAAJgC,KAAAW,MAAsB3C,GAAK,IAQ3B+B,EAAAI,UAAA1B,IAAA,SAAAwC,EAAAvC,EAAAoC,sBAGQ,OAAR,EACI,IAAIR,EAAOW,EAAfV,MAAA,KACQW,EAAeZ,EAAK,GACpBa,GAARD,GACMb,EAANL,KAAkBC,SAAlBiB,GACAb,IACAL,KAAAC,SAAAiB,MAAAb,EAAAL,KAAAC,SAAsCiB,IAKtC,IAAAE,EAAApB,KAAAC,SACAoB,EAAAH,EACAI,EAAAjB,EACA,GAAAC,EAAAd,OAAA,EAAA,CACAc,EAAAE,OAAA,EAAA,mCAIec,EADfC,EAAAC,EAAAf,MAEYa,EAAZC,OAEQJ,EAAeM,KAAvBN,EAA2CA,EAA3C3B,OAAA,GAAA,IAAA+B,GACQH,EAARE,EACAD,EAAAE,EACAD,EAAAA,EAAwBC,IAExB,GAAAT,EACA,IAAA,IAAAY,KAAAZ,EAAA,SACAa,EAAA3B,KAAAC,eAEkCyB,EAAlCnB,MAAA,qBAIA,KADAoB,EAAAA,EAFAJ,EAAAK,EAAoCC,KAIpC,OAAA,EAEA,GAAAF,GAAAb,EAAAY,GACA,OAAA,kBAQkCN,EAAlCC,GAEA,IAAA,IAAaS,EAAb,EAAAC,EAAAZ,EAAAW,EAAAC,EAAAvC,OAAAsC,IAAA,CACA,IAAAP,EAAAQ,EAAAD,GAEAE,EAAAhC,KAAAW,MAAAY,GACAS,GAzIAA,EAAAC,KAAAvD,0GAQY,qBCJCwD,EAAAA,cACbnC,EAAAA,cACA,IAAAoC,EAAAnC,MAAAA,KAAAoC,YAAA,SAAAvC,EAAA9B,EAAAC,EAAAyB,GACA,IAAA3B,EAAAD,EAAM0B,UAAUC,OAAhB5B,EAAAC,EAAA,EAAAE,EAAA,OAAA0B,EAAAA,EAAAxB,OAAAyB,yBAAA3B,EAAAC,GAAAyB,EAEA,GAAA,iBAAAE,SAAA,mBAAAA,QAAAC,SACAhC,EAAA+B,QAAAC,SAAAC,EAAA9B,EAAAC,EAAAyB,QAGI,IAAJ,IAAAK,EAAAD,EAAAL,OAAA,EAAAM,GAAA,EAAAA,KACAhC,EAAc+B,EAAdC,MACAlC,GAAeC,EAAI,EAAnBC,EAAAF,GAAAC,EAAA,EAAAC,EAAAC,EAAAC,EAAAJ,GAAAE,EAAAC,EAAAC,KAAAJ,GACA,OAAAC,EAAA,GAAAD,GAAAK,OAAAC,eAAAH,EAAAC,EAAAJ,GAAAA,GAEAyE,EAAArC,MAAAA,KAAAqC,YAAA,SAAAd,EAAAe,GAdA,GAAA,iBAAA3C,SAAA,mBAAAA,QAAA4C,SAJA,OAAA5C,QAAA4C,SAAAhB,EAAAe,IAEAE,EAAAxC,MAAAA,KAAAwC,SAAA,SAAAC,EAAAC,GACA,OAAA,SAAA3E,EAAAC,GAAA0E,EAAA3E,EAAAC,EAAAyE,KAEAE,EAAAA,iBAAAC,EAAA,WADA,SAAAD,EAAAE,GAAA,GAAAA,gGCPAF,EAAAG,QAAA,8CDQA"
}
