{
  "version": 3,
  "file": "le5le-store.js",
  "sources": [
    "~/le5le-store/le5le-store.ts",
    "~/le5le-store/src/lib.module.ts",
    "~/le5le-store/src/store/store.service.ts",
    "~/le5le-store/src/cookie/cookie.service.ts"
  ],
  "sourcesContent": [
    "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n",
    "import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StoreService } from './store/store.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [StoreService]\n})\nexport class Le5leStoreModule {\n  constructor( @Optional() @SkipSelf() parentModule: Le5leStoreModule) {\n    if (parentModule) {\n      throw new Error(\n        'Le5leStoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: Le5leStoreModule,\n      providers: []\n    };\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class StoreService {\n  private memStore: any = {};\n  private memStore$: any = {};\n\n  private find(key: string): any {\n    if (key === '') return null;\n\n    let data: any;\n    let keys = [];\n    if (key === '.') data = this.memStore;\n    else {\n      keys = key.split('.');\n      data = this.memStore[keys[0]];\n    }\n    if (!data) return null;\n\n    // 遍历查找子属性data\n    if (keys.length > 1) {\n      keys.splice(0, 1);\n      for (let k of keys) {\n        data = data[k];\n        if (!data) return null;\n      }\n    }\n\n    return data;\n  }\n\n  private find$(key: string, autoAdd?: boolean): Subject<any> {\n    if (key === '') return null;\n\n    let data: Subject<any> = this.memStore$[key];\n    if (!data) {\n      if (!autoAdd) return null;\n      this.memStore$[key] = new Subject<any>();\n      data = this.memStore$[key];\n    }\n\n    return data;\n  }\n\n  // key: 如果含.表示解析成对象进行条件搜索。注意：但第一个属性存在时，但是where的条件（非type）不匹配时，返回失败。\n  //      如果key = '.'; 表示根存储对象\n  // where: {\n  //   'user.name': 'Alsmile', // 如果含.表示解析成对象进行条件搜索\n  // }\n  public get(key: string, where?: any): any {\n    let data: any = this.find(key);\n\n    // where条件过滤\n    if (where) {\n      for (let whereKey in where) {\n        if (this.find(whereKey) != where[whereKey]) return null;\n      }\n    }\n\n    return data;\n  }\n\n  // 得到一个可观察对象\n  // key: 如果含.表示解析成对象进行条件搜索。\n  public get$(key: string): any {\n    return this.find$(key, true);\n  }\n\n  // key: 如果含.表示解析成对象进行条件搜索。注意：但第一个属性存在时，但是where的条件不匹配时，返回失败。\n  // value: 设置key=value; 如果 value为空，表示删除\n  // where: {\n  //   'user.name': 'Alsmile', // 如果含.表示解析成对象进行条件搜索\n  // }\n  public set(strKey: string, value: any, where?: any): boolean {\n    if (strKey === '' || strKey === '.') return false;\n\n    let keys = strKey.split('.');\n    let rootKey = keys[0];\n    let observableKeys = [rootKey];\n\n    let data: any = this.memStore[rootKey];\n    if (!data) {\n      this.memStore[rootKey] = {};\n      data = this.memStore[rootKey];\n    }\n\n    // 遍历查找子属性data\n    let parentData: any = this.memStore;\n    let readKey = rootKey;\n    let subData: any = data;\n    if (keys.length > 1) {\n      keys.splice(0, 1);\n      for (let k of keys) {\n        if (!subData[k]) subData[k] = {};\n\n        // 添加到observable通知数组，通知订阅数据改变\n        observableKeys.push(observableKeys[observableKeys.length - 1] + '.' + k);\n\n        parentData = subData;\n        readKey = k;\n        subData = subData[k];\n      }\n    }\n\n    // where条件遍历\n    if (where) {\n      for (let whereKeys in where) {\n        let whereData = this.memStore;\n        // 查找where中的子属性\n        let whereKey = whereKeys.split('.');\n        for (let k of whereKey) {\n          whereData = whereData[k];\n          if (!whereData) return false;\n        }\n        if (whereData != where[whereKeys]) return false;\n      }\n    }\n\n    if (value) parentData[readKey] = value;\n    else delete parentData[readKey];\n\n    for (let k of observableKeys) {\n      let observable: Subject<any> = this.find$(k);\n      if (observable) {\n        observable.next(value);\n      }\n    }\n\n    return true;\n  }\n\n  // 通过一个观察对象去设置数据\n  // key: 如果含.表示解析成对象进行条件搜索。\n  public setByObservable(key: string, observable: any) {\n    (<Observable<any>>observable).subscribe(\n      ret => {\n        this.set(key, ret);\n      }\n    );\n  }\n}\n",
    "import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CookieService {\n\n  static get(name: string): string {\n    let arr: RegExpMatchArray;\n    let reg = new RegExp(\"(^| )\" + name + \"=([^;]*)(;|$)\");\n    if (arr = document.cookie.match(reg)) return decodeURIComponent(arr[2]);\n    else return '';\n  }\n\n  // options: {\n  //   expires?:number,\n  //   path?:string,\n  //   domain?:string\n  // }\n  static set(name: string, value: string, options?: any) {\n    let myWindow: any = window;\n    let cookieStr = myWindow.escape(name) + '=' + myWindow.escape(value) + ';';\n\n    if (!options) options = {};\n    if (options.expires) {\n      let dtExpires = new Date(new Date().getTime() + options.expires * 1000 * 60 * 60 * 24);\n      cookieStr += 'expires=' + dtExpires.toUTCString() + ';';\n    }\n    if (options.path) {\n      cookieStr += 'path=' + options.path + ';';\n    }\n    if (options.domain) {\n      cookieStr += 'domain=' + options.domain + ';';\n    }\n\n    document.cookie = cookieStr;\n  }\n\n  // options: {\n  //   path?:string,\n  //   domain?:string\n  // }\n  static delete(name: string, options?: any) {\n    if (CookieService.get(name)) {\n      if (!options) options = {};\n      options.expires = -1;\n      CookieService.set(name, '', options);\n    }\n  }\n}\n"
  ],
  "names": [
    "__decorate",
    "Subject"
  ],
  "mappings": "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"
}
